{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {Linguages} from \"./models/linguages\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n\n  /**\n   * Variable(s) qui pourront être utilisées dans toutes la classe\n   */\n  public name          : string;\n  public firstName     : string;\n  public langTranslate : string[];\n  public linguages     : Linguages[];\n\n  /**\n   * Constructeur\n   * @param translate\n   */\n  constructor(public translate: TranslateService) {\n  }\n\n  /**\n   * Initialisation des variables au moment du chargement de la vue dans le navigateur\n   */\n  ngOnInit(): void {\n    this.name          = 'Blois';\n    this.firstName     = 'Loïc';\n    this.langTranslate = ['en', 'fr'];\n    this.linguages = [\n      {value: 'english', viewValue  : 'English',  flag : 'assets/img/flags/united-kingdom-flag-round-icon-16.png' },\n      {value: 'français', viewValue : 'Français', flag : 'assets/img/flags/france-flag-round-icon-16.png' }\n    ];\n    this.translate.setDefaultLang(this.langTranslate[0]); // language par défaut = 'en'\n\n  }\n\n  /**\n   * Traduction effectuée sur la vue seulement\n   * @param lang\n   */\n  public changeLinguage(lang: string) {\n    switch (lang) {\n      case 'english':\n        return this.translate.use(this.langTranslate[0]);\n        break;\n      case 'français':\n        return this.translate.use(this.langTranslate[1]);\n        break;\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"dropdown\">\n    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n      {{ 'app.selectLanguage' | translate }}\n    </button>\n    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n      <a href=\"#\" *ngFor=\"let selectLang of linguages\" class=\"dropdown-item\" (click)=\"changeLinguage(selectLang.value)\">\n        <img [src]=selectLang.flag> {{selectLang.viewValue}}\n      </a>\n    </div>\n  </div>\n  <br/>\n  <br/>\n\n  <h1> {{'app.title' | translate:{name: name, firstName: firstName} }}</h1>\n  <p> {{'app.description' | translate}} </p>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // module pour la traduction\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n// fonction obligatoire pour la compilation de la traduction\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}